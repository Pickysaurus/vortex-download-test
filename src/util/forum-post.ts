import { IDownloadTestResults } from '../types/types';


const forumPost = (country: string, isp: string, avgSpeed: number, tests: IDownloadTestResults): string => {
    const summary: string = `Country: ${country}\nInternet Service Provider (ISP): ${isp}\nCDN Test: ${speed(tests.cdnTest?.speed)}\nAverage Download Speed (non-Nexus downloads): ${speed(avgSpeed)}\n\n`;
    const dlResults = Object.entries(tests.serverTests).map(([key, res]) => `[*]${key}: ${speed(res.speed)} (${res.rating})[/*]`).join('\n');
    const downloadTests: string = `Download Tests:\n[LIST]\n${dlResults}\n[/LIST]\n\n`;
    const dlLinks = `Download links:\n[LIST]\n[*]Large File Download: ${tests.largeFileExample || 'Failed'}[/*]\n[*]Small File Download: ${tests.smallFileExample || 'Failed'}[/*]\n[/LIST]\n\n`;
    const trace = `TraceRoute Results:\n[code]${tests.trace}[/code]`;

    return `${summary}${downloadTests}${dlLinks}${trace}\n\nDownload tests generated by Vortex`;
}

const speed = (m?: number): string => `${m?.toFixed(1) ?? 0}MB/s (${m ? (m * 8).toFixed(1) : 0}Mbps)`;

export default forumPost;